DIGEST ead1bf4e1f670a8cad262098f3c4a75e
FLF.Tactics
R698:701 LF.Poly <> <> lib
prf 977:982 <> silly1
R1000:1002 Coq.Init.Datatypes <> nat ind
R1013:1018 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1020:1022 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1019:1019 LF.Tactics <> n var
R1023:1023 LF.Tactics <> m var
R1009:1011 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1008:1008 LF.Tactics <> n var
R1012:1012 LF.Tactics <> m var
prf 1508:1513 <> silly2
R1535:1537 Coq.Init.Datatypes <> nat ind
R1548:1553 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1554:1554 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1577:1583 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1589:1591 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1584:1584 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1586:1586 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1588:1588 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1585:1585 LF.Tactics <> n var
R1587:1587 LF.Tactics <> o var
R1592:1592 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1594:1594 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1596:1596 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1593:1593 LF.Tactics <> m var
R1595:1595 LF.Tactics <> p var
R1560:1563 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1569:1571 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1564:1564 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1566:1566 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1568:1568 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1565:1565 LF.Tactics <> n var
R1567:1567 LF.Tactics <> o var
R1572:1572 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1574:1574 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1576:1576 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1573:1573 LF.Tactics <> m var
R1575:1575 LF.Tactics <> p var
R1556:1558 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1555:1555 LF.Tactics <> n var
R1559:1559 LF.Tactics <> m var
R1544:1546 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1543:1543 LF.Tactics <> n var
R1547:1547 LF.Tactics <> m var
prf 2126:2132 <> silly2a
R2150:2152 Coq.Init.Datatypes <> nat ind
R2171:2177 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2178:2178 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2225:2231 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2235:2237 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2232:2232 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2234:2234 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2233:2233 LF.Tactics <> n var
R2238:2238 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2240:2240 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2239:2239 LF.Tactics <> m var
R2193:2195 Coq.Init.Datatypes <> nat ind
R2212:2215 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2219:2221 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2216:2216 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2218:2218 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2217:2217 LF.Tactics <> q var
R2222:2222 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2224:2224 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2223:2223 LF.Tactics <> r var
R2204:2206 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2199:2199 LF.Poly <> :::'('_x_','_x_')' not
R2201:2201 LF.Poly <> :::'('_x_','_x_')' not
R2203:2203 LF.Poly <> :::'('_x_','_x_')' not
R2200:2200 LF.Tactics <> q var
R2202:2202 LF.Tactics <> q var
R2207:2207 LF.Poly <> :::'('_x_','_x_')' not
R2209:2209 LF.Poly <> :::'('_x_','_x_')' not
R2211:2211 LF.Poly <> :::'('_x_','_x_')' not
R2208:2208 LF.Tactics <> r var
R2210:2210 LF.Tactics <> r var
R2163:2165 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2158:2158 LF.Poly <> :::'('_x_','_x_')' not
R2160:2160 LF.Poly <> :::'('_x_','_x_')' not
R2162:2162 LF.Poly <> :::'('_x_','_x_')' not
R2159:2159 LF.Tactics <> n var
R2161:2161 LF.Tactics <> n var
R2166:2166 LF.Poly <> :::'('_x_','_x_')' not
R2168:2168 LF.Poly <> :::'('_x_','_x_')' not
R2170:2170 LF.Poly <> :::'('_x_','_x_')' not
R2167:2167 LF.Tactics <> m var
R2169:2169 LF.Tactics <> m var
prf 2439:2446 <> silly_ex
R2462:2462 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2508:2514 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2515:2515 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2556:2562 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2576:2581 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2591:2593 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2582:2584 LF.Basics <> odd def
R2587:2587 Coq.Init.Datatypes <> S constr
R2589:2589 LF.Tactics <> p var
R2594:2597 LF.Basics <> true constr
R2569:2571 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2563:2566 LF.Basics <> even def
R2568:2568 LF.Tactics <> p var
R2572:2575 LF.Basics <> true constr
R2540:2543 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2549:2551 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2544:2546 LF.Basics <> odd def
R2548:2548 LF.Tactics <> n var
R2552:2555 LF.Basics <> true constr
R2532:2534 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2526:2529 LF.Basics <> even def
R2531:2531 LF.Tactics <> n var
R2535:2539 LF.Basics <> false constr
R2486:2489 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2500:2502 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2490:2493 LF.Basics <> even def
R2496:2496 Coq.Init.Datatypes <> S constr
R2498:2498 LF.Tactics <> n var
R2503:2507 LF.Basics <> false constr
R2479:2481 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2473:2476 LF.Basics <> even def
R2478:2478 LF.Tactics <> n var
R2482:2485 LF.Basics <> true constr
prf 2901:2906 <> silly3
R2924:2926 Coq.Init.Datatypes <> nat ind
R2937:2942 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2944:2946 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2943:2943 LF.Tactics <> m var
R2947:2947 LF.Tactics <> n var
R2933:2935 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2932:2932 LF.Tactics <> n var
R2936:2936 LF.Tactics <> m var
prf 3656:3668 <> rev_exercise1
R3687:3690 LF.Poly <> list ind
R3692:3694 Coq.Init.Datatypes <> nat ind
R3710:3715 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3718:3720 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3716:3717 LF.Tactics <> l' var
R3721:3723 LF.Poly <> rev def
R3725:3725 LF.Tactics <> l var
R3701:3703 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3700:3700 LF.Tactics <> l var
R3704:3706 LF.Poly <> rev def
R3708:3709 LF.Tactics <> l' var
def 4232:4247 <> trans_eq_example
R4273:4275 Coq.Init.Datatypes <> nat ind
R4297:4305 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4319:4327 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4333:4335 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4328:4328 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4330:4330 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4332:4332 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4329:4329 LF.Tactics <> a var
R4331:4331 LF.Tactics <> b var
R4336:4336 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4338:4338 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4340:4340 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4337:4337 LF.Tactics <> e var
R4339:4339 LF.Tactics <> f var
R4311:4313 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4306:4306 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4308:4308 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4310:4310 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4307:4307 LF.Tactics <> c var
R4309:4309 LF.Tactics <> d var
R4314:4314 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4316:4316 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4318:4318 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4315:4315 LF.Tactics <> e var
R4317:4317 LF.Tactics <> f var
R4289:4291 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4284:4284 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4286:4286 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4288:4288 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4285:4285 LF.Tactics <> a var
R4287:4287 LF.Tactics <> b var
R4292:4292 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4294:4294 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4296:4296 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4293:4293 LF.Tactics <> c var
R4295:4295 LF.Tactics <> d var
prf 4600:4607 <> trans_eq
R4636:4636 LF.Tactics <> X var
R4647:4650 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4656:4659 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4661:4663 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4660:4660 LF.Tactics <> n var
R4664:4664 LF.Tactics <> o var
R4652:4654 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4651:4651 LF.Tactics <> m var
R4655:4655 LF.Tactics <> o var
R4643:4645 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4642:4642 LF.Tactics <> n var
R4646:4646 LF.Tactics <> m var
def 4919:4935 <> trans_eq_example'
R4961:4963 Coq.Init.Datatypes <> nat ind
R4985:4993 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5007:5015 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5021:5023 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5016:5016 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5018:5018 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5020:5020 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5017:5017 LF.Tactics <> a var
R5019:5019 LF.Tactics <> b var
R5024:5024 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5026:5026 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5028:5028 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5025:5025 LF.Tactics <> e var
R5027:5027 LF.Tactics <> f var
R4999:5001 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4994:4994 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4996:4996 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4998:4998 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4995:4995 LF.Tactics <> c var
R4997:4997 LF.Tactics <> d var
R5002:5002 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5004:5004 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5006:5006 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5003:5003 LF.Tactics <> e var
R5005:5005 LF.Tactics <> f var
R4977:4979 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4972:4972 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4974:4974 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4976:4976 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4973:4973 LF.Tactics <> a var
R4975:4975 LF.Tactics <> b var
R4980:4980 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4982:4982 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4984:4984 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4981:4981 LF.Tactics <> c var
R4983:4983 LF.Tactics <> d var
R5501:5501 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5503:5503 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5505:5505 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5483:5490 LF.Tactics <> trans_eq thm
R5501:5501 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5503:5503 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5505:5505 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5483:5490 LF.Tactics <> trans_eq thm
def 5985:6002 <> trans_eq_example''
R6028:6030 Coq.Init.Datatypes <> nat ind
R6052:6060 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6074:6082 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6088:6090 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6083:6083 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6085:6085 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6087:6087 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6084:6084 LF.Tactics <> a var
R6086:6086 LF.Tactics <> b var
R6091:6091 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6093:6093 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6095:6095 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6092:6092 LF.Tactics <> e var
R6094:6094 LF.Tactics <> f var
R6066:6068 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6061:6061 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6063:6063 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6065:6065 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6062:6062 LF.Tactics <> c var
R6064:6064 LF.Tactics <> d var
R6069:6069 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6071:6071 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6073:6073 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6070:6070 LF.Tactics <> e var
R6072:6072 LF.Tactics <> f var
R6044:6046 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6039:6039 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6041:6041 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6043:6043 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6040:6040 LF.Tactics <> a var
R6042:6042 LF.Tactics <> b var
R6047:6047 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6049:6049 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6051:6051 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6048:6048 LF.Tactics <> c var
R6050:6050 LF.Tactics <> d var
R6150:6150 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6152:6152 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6154:6154 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6150:6150 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6152:6152 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6154:6154 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 6267:6283 <> trans_eq_exercise
R6305:6307 Coq.Init.Datatypes <> nat ind
R6332:6340 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6352:6360 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6361:6361 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6367:6371 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6382:6382 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6363:6365 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R6362:6362 LF.Tactics <> n var
R6366:6366 LF.Tactics <> p var
R6372:6379 LF.Basics <> minustwo def
R6381:6381 LF.Tactics <> o var
R6341:6341 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6347:6350 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6343:6345 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R6342:6342 LF.Tactics <> n var
R6346:6346 LF.Tactics <> p var
R6351:6351 LF.Tactics <> m var
R6317:6320 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6331:6331 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6316:6316 LF.Tactics <> m var
R6321:6328 LF.Basics <> minustwo def
R6330:6330 LF.Tactics <> o var
prf 7738:7748 <> S_injective
R7766:7768 Coq.Init.Datatypes <> nat ind
R7783:7788 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7790:7792 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7789:7789 LF.Tactics <> n var
R7793:7793 LF.Tactics <> m var
R7777:7779 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7774:7774 Coq.Init.Datatypes <> S constr
R7776:7776 LF.Tactics <> n var
R7780:7780 Coq.Init.Datatypes <> S constr
R7782:7782 LF.Tactics <> m var
R7835:7837 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7838:7841 Coq.Init.Peano <> pred syndef
R7844:7844 Coq.Init.Datatypes <> S constr
R7835:7837 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7838:7841 Coq.Init.Peano <> pred syndef
R7844:7844 Coq.Init.Datatypes <> S constr
prf 8333:8344 <> S_injective'
R8362:8364 Coq.Init.Datatypes <> nat ind
R8379:8384 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8386:8388 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8385:8385 LF.Tactics <> n var
R8389:8389 LF.Tactics <> m var
R8373:8375 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8370:8370 Coq.Init.Datatypes <> S constr
R8372:8372 LF.Tactics <> n var
R8376:8376 Coq.Init.Datatypes <> S constr
R8378:8378 LF.Tactics <> m var
prf 8900:8912 <> injection_ex1
R8932:8934 Coq.Init.Datatypes <> nat ind
R8953:8958 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8960:8962 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8959:8959 LF.Tactics <> n var
R8963:8963 LF.Tactics <> m var
R8945:8947 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8940:8940 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8942:8942 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8944:8944 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8941:8941 LF.Tactics <> n var
R8943:8943 LF.Tactics <> m var
R8948:8948 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8950:8950 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8952:8952 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8949:8949 LF.Tactics <> o var
R8951:8951 LF.Tactics <> o var
def 9148:9160 <> injection_ex3
R9191:9191 LF.Tactics <> X var
R9201:9204 LF.Poly <> list ind
R9206:9206 LF.Tactics <> X var
R9232:9237 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9248:9253 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9255:9257 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9254:9254 LF.Tactics <> x var
R9258:9258 LF.Tactics <> y var
R9239:9241 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9238:9238 LF.Tactics <> j var
R9243:9246 LF.Poly <> :::x_'::'_x not
R9242:9242 LF.Tactics <> z var
R9247:9247 LF.Tactics <> l var
R9223:9225 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9213:9216 LF.Poly <> :::x_'::'_x not
R9212:9212 LF.Tactics <> x var
R9218:9221 LF.Poly <> :::x_'::'_x not
R9217:9217 LF.Tactics <> y var
R9222:9222 LF.Tactics <> l var
R9227:9230 LF.Poly <> :::x_'::'_x not
R9226:9226 LF.Tactics <> z var
R9231:9231 LF.Tactics <> j var
prf 10003:10018 <> discriminate_ex1
R10036:10038 Coq.Init.Datatypes <> nat ind
R10056:10061 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10063:10065 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10062:10062 LF.Tactics <> n var
R10066:10066 LF.Tactics <> m var
R10049:10051 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10044:10048 LF.Basics <> false constr
R10052:10055 LF.Basics <> true constr
prf 10132:10147 <> discriminate_ex2
R10163:10165 Coq.Init.Datatypes <> nat ind
R10178:10183 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10189:10191 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10185:10187 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R10174:10176 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10171:10171 Coq.Init.Datatypes <> S constr
R10173:10173 LF.Tactics <> n var
R10177:10177 Coq.Init.Datatypes <> O constr
def 11016:11031 <> discriminate_ex3
R11064:11064 LF.Tactics <> X var
R11074:11077 LF.Poly <> list ind
R11079:11079 LF.Tactics <> X var
R11103:11110 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11112:11114 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11111:11111 LF.Tactics <> x var
R11115:11115 LF.Tactics <> z var
R11098:11100 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11088:11091 LF.Poly <> :::x_'::'_x not
R11087:11087 LF.Tactics <> x var
R11093:11096 LF.Poly <> :::x_'::'_x not
R11092:11092 LF.Tactics <> y var
R11097:11097 LF.Tactics <> l var
R11101:11102 LF.Poly <> :::'['_']' not
prf 11356:11362 <> eqb_0_l
R11392:11395 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11397:11399 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11396:11396 LF.Tactics <> n var
R11385:11387 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11380:11383 LF.Basics <> ::nat_scope:x_'=?'_x not
R11384:11384 LF.Tactics <> n var
R11388:11391 LF.Basics <> true constr
prf 12298:12304 <> f_equal
R12333:12336 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12337:12337 LF.Tactics <> B var
R12332:12332 LF.Tactics <> A var
R12346:12346 LF.Tactics <> A var
R12357:12360 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12364:12366 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12361:12361 LF.Tactics <> f var
R12363:12363 LF.Tactics <> x var
R12367:12367 LF.Tactics <> f var
R12369:12369 LF.Tactics <> y var
R12353:12355 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12352:12352 LF.Tactics <> x var
R12356:12356 LF.Tactics <> y var
prf 12441:12461 <> eq_implies_succ_equal
R12479:12481 Coq.Init.Datatypes <> nat ind
R12492:12495 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12499:12501 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12496:12496 Coq.Init.Datatypes <> S constr
R12498:12498 LF.Tactics <> n var
R12502:12502 Coq.Init.Datatypes <> S constr
R12504:12504 LF.Tactics <> m var
R12488:12490 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12487:12487 LF.Tactics <> n var
R12491:12491 LF.Tactics <> m var
R12534:12540 LF.Tactics <> f_equal thm
R12534:12540 LF.Tactics <> f_equal thm
prf 12974:12995 <> eq_implies_succ_equal'
R13013:13015 Coq.Init.Datatypes <> nat ind
R13026:13029 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13033:13035 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13030:13030 Coq.Init.Datatypes <> S constr
R13032:13032 LF.Tactics <> n var
R13036:13036 Coq.Init.Datatypes <> S constr
R13038:13038 LF.Tactics <> m var
R13022:13024 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13021:13021 LF.Tactics <> n var
R13025:13025 LF.Tactics <> m var
prf 13521:13525 <> S_inj
R13543:13545 Coq.Init.Datatypes <> nat ind
R13553:13556 LF.Basics <> bool ind
R13582:13588 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13589:13589 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13596:13599 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13591:13594 LF.Basics <> ::nat_scope:x_'=?'_x not
R13590:13590 LF.Tactics <> n var
R13595:13595 LF.Tactics <> m var
R13600:13600 LF.Tactics <> b var
R13562:13562 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13577:13580 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13563:13563 LF.Basics <> ::nat_scope:x_'=?'_x not
R13567:13572 LF.Basics <> ::nat_scope:x_'=?'_x not
R13576:13576 LF.Basics <> ::nat_scope:x_'=?'_x not
R13564:13564 Coq.Init.Datatypes <> S constr
R13566:13566 LF.Tactics <> n var
R13573:13573 Coq.Init.Datatypes <> S constr
R13575:13575 LF.Tactics <> m var
R13581:13581 LF.Tactics <> b var
prf 14431:14436 <> silly4
R14458:14460 Coq.Init.Datatypes <> nat ind
R14466:14466 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14481:14487 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14493:14498 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14500:14502 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14499:14499 LF.Tactics <> q var
R14503:14503 LF.Tactics <> p var
R14489:14491 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14488:14488 LF.Tactics <> m var
R14492:14492 LF.Tactics <> n var
R14472:14475 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14477:14479 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14476:14476 LF.Tactics <> p var
R14480:14480 LF.Tactics <> q var
R14468:14470 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14467:14467 LF.Tactics <> n var
R14471:14471 LF.Tactics <> m var
prf 16126:16148 <> double_injective_FAILED
R16185:16190 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16192:16194 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16191:16191 LF.Tactics <> n var
R16195:16195 LF.Tactics <> m var
R16174:16176 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16166:16171 LF.Induction <> double def
R16173:16173 LF.Tactics <> n var
R16177:16182 LF.Induction <> double def
R16184:16184 LF.Tactics <> m var
R16498:16504 LF.Tactics <> f_equal thm
R16498:16504 LF.Tactics <> f_equal thm
prf 18821:18836 <> double_injective
R18873:18878 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18880:18882 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18879:18879 LF.Tactics <> n var
R18883:18883 LF.Tactics <> m var
R18862:18864 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18854:18859 LF.Induction <> double def
R18861:18861 LF.Tactics <> n var
R18865:18870 LF.Induction <> double def
R18872:18872 LF.Tactics <> m var
R19767:19773 LF.Tactics <> f_equal thm
R19767:19773 LF.Tactics <> f_equal thm
prf 20803:20810 <> eqb_true
R20841:20844 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20846:20848 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20845:20845 LF.Tactics <> n var
R20849:20849 LF.Tactics <> m var
R20834:20836 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20829:20832 LF.Basics <> ::nat_scope:x_'=?'_x not
R20828:20828 LF.Tactics <> n var
R20833:20833 LF.Tactics <> m var
R20837:20840 LF.Basics <> true constr
def 21210:21240 <> manual_grade_for_informal_proof
R21244:21249 Coq.Init.Datatypes <> option ind
R21255:21255 LF.Poly <> ::type_scope:x_'*'_x not
R21252:21254 Coq.Init.Datatypes <> nat ind
R21256:21261 Coq.Strings.String <> string ind
R21267:21270 Coq.Init.Datatypes <> None constr
prf 21489:21506 <> plus_n_n_injective
R21537:21542 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21544:21546 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21543:21543 LF.Tactics <> n var
R21547:21547 LF.Tactics <> m var
R21529:21531 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21525:21527 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R21524:21524 LF.Tactics <> n var
R21528:21528 LF.Tactics <> n var
R21533:21535 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R21532:21532 LF.Tactics <> m var
R21536:21536 LF.Tactics <> m var
prf 21917:21945 <> double_injective_take2_FAILED
R21982:21987 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21989:21991 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21988:21988 LF.Tactics <> n var
R21992:21992 LF.Tactics <> m var
R21971:21973 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21963:21968 LF.Induction <> double def
R21970:21970 LF.Tactics <> n var
R21974:21979 LF.Induction <> double def
R21981:21981 LF.Tactics <> m var
R22295:22301 LF.Tactics <> f_equal thm
R22295:22301 LF.Tactics <> f_equal thm
prf 23242:23263 <> double_injective_take2
R23300:23305 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23307:23309 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23306:23306 LF.Tactics <> n var
R23310:23310 LF.Tactics <> m var
R23289:23291 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23281:23286 LF.Induction <> double def
R23288:23288 LF.Tactics <> n var
R23292:23297 LF.Induction <> double def
R23299:23299 LF.Tactics <> m var
R23796:23802 LF.Tactics <> f_equal thm
R23796:23802 LF.Tactics <> f_equal thm
prf 25909:25928 <> nth_error_after_last
R25943:25945 Coq.Init.Datatypes <> nat ind
R25964:25967 LF.Poly <> list ind
R25969:25969 LF.Tactics <> X var
R25987:25992 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26006:26008 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25993:26001 LF.Poly <> nth_error def
R26005:26005 LF.Tactics <> n var
R26003:26003 LF.Tactics <> l var
R26009:26012 Coq.Init.Datatypes <> None constr
R25983:25985 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25975:25980 LF.Poly <> length def
R25982:25982 LF.Tactics <> l var
R25986:25986 LF.Tactics <> n var
def 26381:26386 <> square
R26394:26396 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R26393:26393 LF.Tactics <> n var
R26397:26397 LF.Tactics <> n var
prf 26468:26478 <> square_mult
R26508:26510 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26494:26499 LF.Tactics <> square def
R26503:26505 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R26502:26502 LF.Tactics <> n var
R26506:26506 LF.Tactics <> m var
R26519:26521 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R26511:26516 LF.Tactics <> square def
R26518:26518 LF.Tactics <> n var
R26522:26527 LF.Tactics <> square def
R26529:26529 LF.Tactics <> m var
R26844:26849 LF.Tactics <> square def
R27168:27177 LF.Induction <> mult_assoc thm
R27168:27177 LF.Induction <> mult_assoc thm
R27168:27177 LF.Induction <> mult_assoc thm
R27203:27205 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27199:27201 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27195:27197 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27211:27213 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27207:27209 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27203:27205 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27199:27201 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27195:27197 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27211:27213 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27207:27209 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27232:27239 LF.Induction <> mul_comm thm
R27232:27239 LF.Induction <> mul_comm thm
R27232:27239 LF.Induction <> mul_comm thm
R27248:27257 LF.Induction <> mult_assoc thm
R27248:27257 LF.Induction <> mult_assoc thm
R27283:27292 LF.Induction <> mult_assoc thm
R27283:27292 LF.Induction <> mult_assoc thm
R27283:27292 LF.Induction <> mult_assoc thm
def 27678:27680 <> foo
R27686:27688 Coq.Init.Datatypes <> nat ind
prf 27910:27921 <> silly_fact_1
R27944:27946 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27940:27942 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R27935:27937 LF.Tactics <> foo def
R27939:27939 LF.Tactics <> m var
R27958:27960 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R27947:27949 LF.Tactics <> foo def
R27953:27955 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R27952:27952 LF.Tactics <> m var
def 28188:28190 <> bar
R28205:28205 LF.Tactics <> x var
R28216:28216 Coq.Init.Datatypes <> O constr
R28227:28227 Coq.Init.Datatypes <> S constr
prf 28301:28319 <> silly_fact_2_FAILED
R28342:28344 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28338:28340 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R28333:28335 LF.Tactics <> bar def
R28337:28337 LF.Tactics <> m var
R28356:28358 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R28345:28347 LF.Tactics <> bar def
R28351:28353 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R28350:28350 LF.Tactics <> m var
prf 29345:29356 <> silly_fact_2
R29379:29381 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29375:29377 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R29370:29372 LF.Tactics <> bar def
R29374:29374 LF.Tactics <> m var
R29393:29395 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R29382:29384 LF.Tactics <> bar def
R29388:29390 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R29387:29387 LF.Tactics <> m var
prf 29743:29755 <> silly_fact_2'
R29778:29780 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29774:29776 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R29769:29771 LF.Tactics <> bar def
R29773:29773 LF.Tactics <> m var
R29792:29794 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R29781:29783 LF.Tactics <> bar def
R29787:29789 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R29786:29786 LF.Tactics <> m var
R29826:29828 LF.Tactics <> bar def
def 30474:30481 <> sillyfun
R30488:30490 Coq.Init.Datatypes <> nat ind
R30495:30498 LF.Basics <> bool ind
R30509:30512 LF.Basics <> ::nat_scope:x_'=?'_x not
R30508:30508 LF.Tactics <> n var
R30537:30540 LF.Basics <> ::nat_scope:x_'=?'_x not
R30536:30536 LF.Tactics <> n var
R30561:30565 LF.Basics <> false constr
R30548:30552 LF.Basics <> false constr
R30520:30524 LF.Basics <> false constr
prf 30577:30590 <> sillyfun_false
R30606:30608 Coq.Init.Datatypes <> nat ind
R30624:30626 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30614:30621 LF.Tactics <> sillyfun def
R30623:30623 LF.Tactics <> n var
R30627:30631 LF.Basics <> false constr
R30660:30667 LF.Tactics <> sillyfun def
R30683:30686 LF.Basics <> ::nat_scope:x_'=?'_x not
R30683:30686 LF.Basics <> ::nat_scope:x_'=?'_x not
R30775:30778 LF.Basics <> ::nat_scope:x_'=?'_x not
R30775:30778 LF.Basics <> ::nat_scope:x_'=?'_x not
def 31651:31655 <> split
R31675:31678 LF.Poly <> list ind
R31682:31682 LF.Poly <> ::type_scope:x_'*'_x not
R31681:31681 LF.Tactics <> X var
R31683:31683 LF.Tactics <> Y var
R31704:31704 LF.Poly <> ::type_scope:x_'*'_x not
R31711:31715 LF.Poly <> ::type_scope:x_'*'_x not
R31722:31722 LF.Poly <> ::type_scope:x_'*'_x not
R31705:31708 LF.Poly <> list ind
R31710:31710 LF.Tactics <> X var
R31716:31719 LF.Poly <> list ind
R31721:31721 LF.Tactics <> Y var
R31735:31735 LF.Tactics <> l var
R31746:31747 LF.Poly <> :::'['_']' not
R31752:31752 LF.Poly <> :::'('_x_','_x_')' not
R31755:31756 LF.Poly <> :::'('_x_','_x_')' not
R31759:31759 LF.Poly <> :::'('_x_','_x_')' not
R31753:31754 LF.Poly <> :::'['_']' not
R31757:31758 LF.Poly <> :::'['_']' not
R31771:31774 LF.Poly <> :::x_'::'_x not
R31765:31765 LF.Poly <> :::'('_x_','_x_')' not
R31767:31768 LF.Poly <> :::'('_x_','_x_')' not
R31770:31770 LF.Poly <> :::'('_x_','_x_')' not
R31792:31796 LF.Tactics <> split def
R31813:31813 LF.Poly <> :::'('_x_','_x_')' not
R31816:31817 LF.Poly <> :::'('_x_','_x_')' not
R31820:31820 LF.Poly <> :::'('_x_','_x_')' not
R31825:31825 LF.Poly <> :::'('_x_','_x_')' not
R31833:31834 LF.Poly <> :::'('_x_','_x_')' not
R31842:31842 LF.Poly <> :::'('_x_','_x_')' not
R31827:31830 LF.Poly <> :::x_'::'_x not
R31836:31839 LF.Poly <> :::x_'::'_x not
prf 31952:31964 <> combine_split
R31984:31987 LF.Poly <> list ind
R31991:31993 LF.Poly <> ::type_scope:x_'*'_x not
R31990:31990 LF.Tactics <> X var
R31994:31994 LF.Tactics <> Y var
R32025:32030 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32044:32046 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32031:32037 LF.Poly <> combine def
R32042:32043 LF.Tactics <> l2 var
R32039:32040 LF.Tactics <> l1 var
R32047:32047 LF.Tactics <> l var
R32014:32016 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32007:32011 LF.Tactics <> split def
R32013:32013 LF.Tactics <> l var
R32017:32017 LF.Poly <> :::'('_x_','_x_')' not
R32020:32021 LF.Poly <> :::'('_x_','_x_')' not
R32024:32024 LF.Poly <> :::'('_x_','_x_')' not
R32018:32019 LF.Tactics <> l1 var
R32022:32023 LF.Tactics <> l2 var
def 32596:32604 <> sillyfun1
R32611:32613 Coq.Init.Datatypes <> nat ind
R32618:32621 LF.Basics <> bool ind
R32632:32635 LF.Basics <> ::nat_scope:x_'=?'_x not
R32631:32631 LF.Tactics <> n var
R32659:32662 LF.Basics <> ::nat_scope:x_'=?'_x not
R32658:32658 LF.Tactics <> n var
R32682:32686 LF.Basics <> false constr
R32670:32673 LF.Basics <> true constr
R32643:32646 LF.Basics <> true constr
prf 32881:32900 <> sillyfun1_odd_FAILED
R32916:32918 Coq.Init.Datatypes <> nat ind
R32942:32947 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32953:32955 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32948:32950 LF.Basics <> odd def
R32952:32952 LF.Tactics <> n var
R32956:32959 LF.Basics <> true constr
R32935:32937 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32924:32932 LF.Tactics <> sillyfun1 def
R32934:32934 LF.Tactics <> n var
R32938:32941 LF.Basics <> true constr
R32991:32999 LF.Tactics <> sillyfun1 def
R33021:33024 LF.Basics <> ::nat_scope:x_'=?'_x not
R33021:33024 LF.Basics <> ::nat_scope:x_'=?'_x not
prf 33826:33838 <> sillyfun1_odd
R33854:33856 Coq.Init.Datatypes <> nat ind
R33880:33885 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33891:33893 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33886:33888 LF.Basics <> odd def
R33890:33890 LF.Tactics <> n var
R33894:33897 LF.Basics <> true constr
R33873:33875 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33862:33870 LF.Tactics <> sillyfun1 def
R33872:33872 LF.Tactics <> n var
R33876:33879 LF.Basics <> true constr
R33929:33937 LF.Tactics <> sillyfun1 def
R33959:33962 LF.Basics <> ::nat_scope:x_'=?'_x not
R33959:33962 LF.Basics <> ::nat_scope:x_'=?'_x not
R34209:34216 LF.Tactics <> eqb_true prfax
R34209:34216 LF.Tactics <> eqb_true prfax
R34508:34511 LF.Basics <> ::nat_scope:x_'=?'_x not
R34508:34511 LF.Basics <> ::nat_scope:x_'=?'_x not
R34568:34575 LF.Tactics <> eqb_true prfax
R34568:34575 LF.Tactics <> eqb_true prfax
prf 34761:34782 <> bool_fn_applied_thrice
R34804:34807 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34808:34811 LF.Basics <> bool ind
R34800:34803 LF.Basics <> bool ind
R34819:34822 LF.Basics <> bool ind
R34839:34841 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34828:34828 LF.Tactics <> f var
R34831:34831 LF.Tactics <> f var
R34834:34834 LF.Tactics <> f var
R34836:34836 LF.Tactics <> b var
R34842:34842 LF.Tactics <> f var
R34844:34844 LF.Tactics <> b var
prf 37494:37500 <> eqb_sym
R37518:37520 Coq.Init.Datatypes <> nat ind
R37526:37526 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37533:37537 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37544:37544 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37528:37531 LF.Basics <> ::nat_scope:x_'=?'_x not
R37527:37527 LF.Tactics <> n var
R37532:37532 LF.Tactics <> m var
R37539:37542 LF.Basics <> ::nat_scope:x_'=?'_x not
R37538:37538 LF.Tactics <> m var
R37543:37543 LF.Tactics <> n var
prf 37928:37936 <> eqb_trans
R37969:37974 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37988:37993 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38000:38002 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37995:37998 LF.Basics <> ::nat_scope:x_'=?'_x not
R37994:37994 LF.Tactics <> n var
R37999:37999 LF.Tactics <> p var
R38003:38006 LF.Basics <> true constr
R37981:37983 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37976:37979 LF.Basics <> ::nat_scope:x_'=?'_x not
R37975:37975 LF.Tactics <> m var
R37980:37980 LF.Tactics <> p var
R37984:37987 LF.Basics <> true constr
R37962:37964 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37957:37960 LF.Basics <> ::nat_scope:x_'=?'_x not
R37956:37956 LF.Tactics <> n var
R37961:37961 LF.Tactics <> m var
R37965:37968 LF.Basics <> true constr
def 38759:38781 <> split_combine_statement
prf 38955:38967 <> split_combine
R38971:38993 LF.Tactics <> split_combine_statement prfax
def 39084:39113 <> manual_grade_for_split_combine
R39117:39122 Coq.Init.Datatypes <> option ind
R39128:39128 LF.Poly <> ::type_scope:x_'*'_x not
R39125:39127 Coq.Init.Datatypes <> nat ind
R39129:39134 Coq.Strings.String <> string ind
R39140:39143 Coq.Init.Datatypes <> None constr
prf 39321:39335 <> filter_exercise
R39366:39369 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39370:39373 LF.Basics <> bool ind
R39365:39365 LF.Tactics <> X var
R39414:39414 LF.Tactics <> X var
R39425:39428 LF.Poly <> list ind
R39430:39430 LF.Tactics <> X var
R39459:39464 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39471:39473 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39465:39468 LF.Tactics <> test var
R39470:39470 LF.Tactics <> x var
R39474:39477 LF.Basics <> true constr
R39449:39451 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39436:39441 LF.Poly <> filter def
R39448:39448 LF.Tactics <> l var
R39443:39446 LF.Tactics <> test var
R39453:39456 LF.Poly <> :::x_'::'_x not
R39452:39452 LF.Tactics <> x var
R39457:39458 LF.Tactics <> lf var
def 40496:40502 <> forallb
R40524:40527 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40528:40531 LF.Basics <> bool ind
R40523:40523 LF.Tactics <> X var
R40539:40542 LF.Poly <> list ind
R40544:40544 LF.Tactics <> X var
R40549:40552 LF.Basics <> bool ind
def 40630:40643 <> test_forallb_1
R40670:40672 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40647:40653 LF.Tactics <> forallb prfax
R40659:40659 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R40661:40661 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R40663:40663 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R40665:40665 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R40667:40667 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R40669:40669 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R40655:40657 LF.Basics <> odd def
R40673:40676 LF.Basics <> true constr
def 40724:40737 <> test_forallb_2
R40767:40769 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40741:40747 LF.Tactics <> forallb prfax
R40754:40754 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R40760:40760 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R40766:40766 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R40755:40759 LF.Basics <> false constr
R40761:40765 LF.Basics <> false constr
R40749:40752 LF.Basics <> negb def
R40770:40773 LF.Basics <> true constr
def 40821:40834 <> test_forallb_3
R40860:40862 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40838:40844 LF.Tactics <> forallb prfax
R40851:40851 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R40853:40853 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R40855:40855 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R40857:40857 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R40859:40859 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R40846:40849 LF.Basics <> even def
R40863:40867 LF.Basics <> false constr
def 40915:40928 <> test_forallb_4
R40950:40952 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40932:40938 LF.Tactics <> forallb prfax
R40948:40949 LF.Poly <> :::'['_']' not
R40941:40943 LF.Basics <> eqb def
R40953:40956 LF.Basics <> true constr
def 41005:41011 <> existsb
R41033:41036 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41037:41040 LF.Basics <> bool ind
R41032:41032 LF.Tactics <> X var
R41048:41051 LF.Poly <> list ind
R41053:41053 LF.Tactics <> X var
R41058:41061 LF.Basics <> bool ind
def 41139:41152 <> test_existsb_1
R41181:41183 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41156:41162 LF.Tactics <> existsb prfax
R41172:41172 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41174:41174 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41176:41176 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41178:41178 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41180:41180 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41165:41167 LF.Basics <> eqb def
R41184:41188 LF.Basics <> false constr
def 41236:41249 <> test_existsb_2
R41290:41292 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41253:41259 LF.Tactics <> existsb prfax
R41273:41273 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41278:41278 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41283:41283 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41289:41289 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41274:41277 LF.Basics <> true constr
R41279:41282 LF.Basics <> true constr
R41284:41288 LF.Basics <> false constr
R41262:41265 LF.Basics <> andb def
R41267:41270 LF.Basics <> true constr
R41293:41296 LF.Basics <> true constr
def 41344:41357 <> test_existsb_3
R41386:41388 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41361:41367 LF.Tactics <> existsb prfax
R41373:41373 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41375:41375 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41377:41377 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41379:41379 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41381:41381 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41383:41383 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41385:41385 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41369:41371 LF.Basics <> odd def
R41389:41392 LF.Basics <> true constr
def 41440:41453 <> test_existsb_4
R41472:41474 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41457:41463 LF.Tactics <> existsb prfax
R41470:41471 LF.Poly <> :::'['_']' not
R41465:41468 LF.Basics <> even def
R41475:41479 LF.Basics <> false constr
def 41530:41537 <> existsb'
R41559:41562 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41563:41566 LF.Basics <> bool ind
R41558:41558 LF.Tactics <> X var
R41574:41577 LF.Poly <> list ind
R41579:41579 LF.Tactics <> X var
R41584:41587 LF.Basics <> bool ind
prf 41665:41680 <> existsb_existsb'
R41711:41714 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41715:41718 LF.Basics <> bool ind
R41710:41710 LF.Tactics <> X var
R41726:41729 LF.Poly <> list ind
R41731:41731 LF.Tactics <> X var
R41751:41753 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41737:41743 LF.Tactics <> existsb prfax
R41750:41750 LF.Tactics <> l var
R41745:41748 LF.Tactics <> test var
R41754:41761 LF.Tactics <> existsb' prfax
R41768:41768 LF.Tactics <> l var
R41763:41766 LF.Tactics <> test var
